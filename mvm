#!/usr/bin/ruby
require "net/http"
require "uri"

raise "Wrong arguments" unless ARGV.size >= 1

def os
  return "linux" if RUBY_PLATFORM.include? 'linux'
  return "osx"   if RUBY_PLATFORM.include? 'darwin'
end

def arch
  return 'x86_64'if RUBY_PLATFORM.include? 'x86_64'
  return 'i686'  if RUBY_PLATFORM.include? 'i686'
end

def exists?
  not get_url.nil?
end

def current
  @current ||= `ls -l /usr/local/bin | grep "mongod "`.split('/')[-2]
end

def get_url
  return @url unless @url.nil?
  uri = URI.parse("http://dl.mongodb.org/dl/#{os}/#{arch}")
  response = Net::HTTP.get_response(uri)
  @url = response.body.split("\n").map{ |l| l if l.include?(@version) }.compact.first.split('"')[1]
end

def download
  `curl #{get_url} > mongo.tgz`
end

def uncompress
  `mkdir #{@version}`
  `tar -zxvf mongo.tgz`
  `rm mongo.tgz`
end

def move
  a = `mkdir ~/.mongos`
  a = `mkdir ~/.mongos/#{@version}`
  `cp mongodb-osx-x86_64-#{@version}/bin/* ~/.mongos/#{@version}/`
  `rm -R mongodb-osx-x86_64-#{@version}`
end

def link
  files = %w(
    mongo mongod mongodump mongoexport mongofiles mongoimport mongooplog
    mongoperf mongorestore mongosmongosniff mongostat mongotop
  )
  files.each do |f|
    `rm /usr/local/bin/#{f}`
  end

  files.each do |f|
    `ln -s ~/.mongos/#{@version}/#{f} /usr/local/bin/#{f}`
  end
end

def stop_mongo
  `ps a | grep mongod`.split("\n").each do |l|
    `kill -QUIT #{l.split(' ')[0]}` unless l.include? 'grep'
  end
end

def list
  `ls ~/.mongos`.split("\n")
end

@action  = ARGV[0] 
@version = ARGV[1]

case @action
  when 'use'
    stop_mongo
    raise "Wrong version" unless exists?
    unless list.include? @version
      download
      uncompress
      move
    end
    link
  when 'list'
    list.each do |l|
      puts "#{l == current ? '=> ' : '   '}\033[1;32;40m#{l}\033[0m"
    end
end